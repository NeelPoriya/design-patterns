---
title: Tic Tac Toe
---

classDiagram
    TicTacToeSystem <|-- Game
    GamePublisher <|-- Game

    class TicTacToeSystem {
        - instance : TicTacToeSystem
        - game: Game
        - scoreBoard: Scoreboard

        + GetInstance() TicTacToeSystem
        + CreateGame(Player player1, Player player2, int boardSize)
        + PrintScoreboard()
        + MakeMove(Player player, string cellId)
        + ResetGame()
    }

    class GamePublisher {
        <<abstract>>
        - subscribers : List~GameObserver~
        + AddSubscriber(GameObserver)
        + RemoveSubscriber(GameObserver)
        + NotifyObservers()
    }

    class GameObserver {
        <<interface>>
        + Update(Game) void
    }

    GamePublisher --|> GameObserver
    GameObserver <|-- Scoreboard

    class Scoreboard {
        - scoreboard: Dictionary~string, Scorecard~

        + Update(Game) void
        + PrintScoreboard() void
    }

    class Scorecard {
        int wins;
        int loses;
        int draws;
    }

    Scoreboard --|> Scorecard

    class Game {
        - player1 : Player
        - player2 : Player
        - currentPlayer : Player
        - state : GameState
        - board : Board
        + CreateGame(Player player1, Player player2, int boardSize) void
        + ResetGame()
        + winningStrategy
    }

    class GameState {
        <<interface>>
        + HandleMove(Player player, string cellId) void
    }

    class InProgressState {
        + HandleMove(Player player, string cellId) void
    }
    class DrawState {
        + HandleMove(Player player, string cellId) void
    }
    class WinState {
        + HandleMove(Player player, string cellId) void
    }

    GameState <|-- InProgressState
    GameState <|-- DrawState
    GameState <|-- WinState
    Game <|-- GameState

    class Board {
        - cells : Dictionary<string, Cell>
    }

    Game <|-- Board